version: '3'
services:
  frontend:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    ports:
      - "8080:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0

  orchestrator:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./orchestrator/Dockerfile
    ports:
      - 8081:5000
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/orchestrator/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_1:27017/bookstore
    volumes:
      - ./utils:/app/utils
      - ./orchestrator/src:/app/orchestrator/src
  
  fraud_detection:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./fraud_detection/Dockerfile
    ports:
      - 50051:50051
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/fraud_detection/src/app.py
    volumes:
      - ./utils:/app/utils
      - ./fraud_detection/src:/app/fraud_detection/src

  transaction_verification:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./transaction_verification/Dockerfile
    ports:
      - 50052:50052
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/transaction_verification/src/app.py
    volumes:
      - ./utils:/app/utils
      - ./transaction_verification/src:/app/transaction_verification/src

  suggestions:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./suggestions/Dockerfile
    ports:
      - 50053:50053
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/suggestions/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_1:27017/bookstore
    volumes:
      - ./utils:/app/utils
      - ./suggestions/src:/app/suggestions/src

  book_suggestion_model:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./book_suggestion_model/Dockerfile
    ports:
      - 50054:50054
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/book_suggestion_model/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_1:27017/bookstore
    volumes:
      - ./utils:/app/utils
      - ./book_suggestion_model/src:/app/book_suggestion_model/src

  # ---- order processing ----
  order_queue:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./order_queue/Dockerfile
    ports:
      - 50055:50055
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/order_queue/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_1:27017/bookstore
    volumes:
      - ./utils:/app/utils
      - ./order_queue/src:/app/order_queue/src


  order_executor_1:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./order_executor/Dockerfile
    ports:
      - "50056:50056"
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/order_executor/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_1:27017/bookstore
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_ID=order_executor_1
    volumes:
      - ./utils:/app/utils
      - ./order_executor/src:/app/order_executor/src

  order_executor_2:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./order_executor/Dockerfile
    ports:
      - "50057:50056"
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/order_executor/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_1:27017/bookstore
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_ID=order_executor_2
    volumes:
      - ./utils:/app/utils
      - ./order_executor/src:/app/order_executor/src

  payment_service:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./payment/Dockerfile
    ports:
      - "50058:50058"
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/payment/src/app.py
    volumes:
      - ./utils:/app/utils
      - ./payment/src:/app/payment/src


  # ---- books database ----
  book_storage_1:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./book_storage/Dockerfile
    ports:
      - "50060:50060"
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/book_storage/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_1:27017/bookstore
      - ZK_HOSTS=zookeeper:2181
      - SERVICE_ID=book_storage_1
    volumes:
      - ./utils:/app/utils
      - ./book_storage/src:/app/book_storage/src

    
  book_storage_2:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./book_storage/Dockerfile
    ports:
      - "50061:50060"
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/book_storage/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_2:27017/bookstore
      - ZK_HOSTS=zookeeper:2181
      - SERVICE_ID=book_storage_2
    volumes:
      - ./utils:/app/utils
      - ./book_storage/src:/app/book_storage/src


  book_storage_3:
    platform: linux/arm64
    build:
      context: ./
      dockerfile: ./book_storage/Dockerfile
    ports:
      - "50062:50060"
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/book_storage/src/app.py
      - MONGO_URI=mongodb://admin:password@mongodb_3:27017/bookstore
      - ZK_HOSTS=zookeeper:2181
      - SERVICE_ID=book_storage_3
    volumes:
      - ./utils:/app/utils
      - ./book_storage/src:/app/book_storage/src


  # ---- databases ----
  # https://gist.github.com/gbzarelli/c15b607d62fc98ae436564bf8129ea8e
  mongodb_1:
    container_name: mongodb_1
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_DATABASE: bookstore
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data_1:/data/db
      - ./mongodb/init_scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    command: ["mongod", "--quiet"]


  mongodb_2:
    container_name: mongodb_2
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_DATABASE: bookstore
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data_2:/data/db
      - ./mongodb/init_scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27018:27017"
    command: ["mongod", "--quiet"]


  mongodb_3:
    container_name: mongodb_3
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_DATABASE: bookstore
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data_3:/data/db
      - ./mongodb/init_scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27019:27017"
    command: ["mongod", "--quiet"]


  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  zookeeper:
    image: zookeeper:3.5
    ports:
      - "2181:2181"
  
  observability:
    image: grafana/otel-lgtm
    ports:
      - "3001:3000"
      - "4317:4317"
      - "4318:4318"
    environment:
      - OTEL_METRIC_EXPORT_INTERVAL=1000
    

volumes:
  mongodb_data_1:
  mongodb_data_2:
  mongodb_data_3:
  mongodb_users_data:


networks:
  app_network:
    driver: bridge